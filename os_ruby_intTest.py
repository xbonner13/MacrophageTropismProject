#import os
from subprocess import Popen, PIPE, STDOUT
import sys
sequence = sys.argv[1]


slave = Popen(['ruby', 'sequence_hxb2.rb', sequence], stdin=PIPE, stdout=PIPE, stderr=STDOUT)
#ruby_sequence_path = "/Users/thesuccessguy/Documents/ALl_MYFirst_Year/SwanstromRotation/PID/sequence.rb"
#ruby_command  = str("ruby -e \"require \'/Users/thesuccessguy/Documents/ALl_MYFirst_Year/SwanstromRotation/PID/sequence.rb\'; puts sequence_locator(\'" + sequence + "\')")
#print ruby_command
stdout_ = slave.communicate()[0]
#print stdout_.split()
#os.system("'" + ruby_command + "'")
seq_string = stdout_.split()[4]
hxb2_string = stdout_.split()[5]
print seq_string
print hxb2_string
#pause = raw_input()
align_counter = 0
hxb2_counter = 0

print "This is the length of the hxb2 string" + str(len(hxb2_string))
print "This is the length of the alignment string" + str(len(seq_string))
for i in range(len(seq_string)): 
    #print seq_string[i]
    if seq_string[i] == '-':
        align_counter = align_counter + 1
    if hxb2_string[i] == '-':
        hxb2_counter = hxb2_counter + 1

print "Number of hxb2 -: " + str(hxb2_counter)
print "Number of align -: " +str(align_counter)
pause = raw_input()
#ruby -e "require'/Users/thesuccessguy/Documents/ALl_MYFirst_Year/SwanstromRotation/PID/sequence.rb'; puts sequence_locator('TGTGTACCTTTACAGTGCTCTAATGTGAAAAAAAAAAAAACCAAAAATGATACTAATACCGCCATTAATGGTGGGGTAGGAGGGATGCATAAAGAAATGAAAAACTGCTCTTTCAATGTTACCACAAATGAAGAAAATAAGGTGCAGAAAAAATATGCACTTCTTTATAAACTTGATATAGTATCAATAGATAGTAGTAGTAGTAAAAAAAAAAAAAAAAAAAAAAGTAGAAACAAATATAGTAACTATAGGTTGATAAGTTGTAACACCTCAGTTATTACCCAGGCCTGTCCAAAAGTATCCTTTGAGCCAATTCCCATACATTATTGTGCCCCGGCTGGTTTTGCGATTCTAAAGTGTAATGATAAGAAGTTCAATGGAAAAGGAGAGTGTAAAAATGTCAGCACAGTACAATGTACACATGGAATTAGACCAGTAGTATCAACTCACCTGTTGTTAAATGGCAGTCTAGCAGAAGAAGAGGTAGTAATTAAATCTGACAATTTCTCAAATAATGCTAAAACTATAATAGTACAGCTGAATAAAACTGTAAAGATTAATTGCACAAGACCCAATAACAATACAAGAACAGGTATAAATTTAGGACAAGGGAGAGCATGGTATGCAACAACAGACATAGTAGGAGATATAAGACAAGCACATTGTAACATTAGTAGAACAGATTGGAATAACACTTTAAAACTGGTAGCTAAGAAATTACTAGAACAATATGGAACTAATAAAACAATAAAATTTGAGCAACCTGTGCAGGGAGGGGACCCAGAAATTTTAATGCACAGTTTTAATTGTGGAGGGGAATTTTTCTACTGTAATACATCAAAACTGTTTAATAGTACTTGGAAAAATAAAACTAGTATTTGGGATAATAACATGGAAGAAAATGGCACACTCACACTCCCATGTAAAATAAGGCAATTTATAAATATGTGGCAGAAAGTAGGAAAAGCAATGTATGCCCCTCCCATCAGCGGACGAATTAACTGCTTATCAAATATTACTGGGCTGCTATTAATAAGAGATGGTGGTGGTAAAAAAGTTAACGGGACCGAGATCTTCAGACCTGGAGGAGGAGATATGAGGGACAATTGGAGAAGTGAATTATATAAATACAAAGTAATCAAAATTGAACCATTAGGAATAGCACCCACCAAGGCAAAGAGAAGAGTGGTGCAGAGAGAAAAAAGAGCAGTGGGATTAGGAGCTATGTTCCTTGGGTTCTTGGGAGCAGCAGGAAGCACTATGGGCGCAGCGTCACTAACGCTGACGGTACAGGCCAGACAATTATTGTCTGGTATAGTGCAACAGCAGAGCAAGCTGCTGAGAGCTATTGAGGCGCAACAACATCTGTTGCAACTCACAGTCTGGGGCATAAAACAGCTCCAGGCAAGAGTCCTGGCTGTGGAAGCATACCTAAAGGATCAACAG')"


